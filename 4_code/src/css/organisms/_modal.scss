.modal {
	$actionButHeight: 60px;
	$listEffect: cubic-bezier(0.22, 0.61, 0.36, 1);

	text-align: center;
	position: relative;
	height: 100%;
	min-width: 320px;
	min-height: 600px;


	&__main {
		background: white;
		transition: transform .4s $listEffect, padding .1s ease-in-out;
		height: 100%;
		padding: 20px;
  	box-shadow: -20px 0 40px -20px rgba( black, .05 );
  	overflow: hidden;
  	position: relative;

  	@include mq( 540px ) {
			padding: 40px;
		}
	}

	&__aside {
		position: absolute 0 auto 0 #{-$asideWidth};
		width: $asideWidth;
		background: #fafafa;
		text-align: left;
		font-weight: normal;
		transition: left .4s $listEffect;
		overflow: auto;

		header {
			padding: 20px;
			box-shadow: 0px 1px 11px rgba( black, .05 );
			
			@include mq( 540px ) {
				padding: 40px;
			}
		}

		&__toggle {
			position: absolute 20px auto auto 20px;
			z-index: 10;
			font-size: 0;
			padding: 0;
			transition: all .1s ease-in-out;
			opacity: 0;
			visibility: hidden;

			&:hover {
				background: transparent;
			}
			
			@include mq( 540px ) {
				position: absolute 40px auto auto 40px;
			}
		}

		input.search {
			display: block;
			width: 100%;
			background: white;
			margin-bottom: 20px;
			padding: 5px 35px 5px 15px;
			border-radius: 25px;
		}

	 	.button.sort {
			background: rgba( black, .05 );
	    border: 0;
	    font-size: 11px;
	    padding: 0 10px;
	    font-weight: 600;
	    margin-right: 10px;
	    letter-spacing: 0;
	    border-radius: 10px;
	    color: rgba( black, .55);
	    letter-spacing: 0;
	    box-shadow: 0px 2px rgba( black, .025 );

	    &:after {
	    	content: ">";
	    	display: inline-block;
	    	position: relative;
	    	opacity: 0;
	    	transition: transform .15s ease-in-out, opacity .1s ease-in-out;
	    }

	    &.asc,
	    &.desc {
	    	&:after {
	    		opacity: 1;
	    		margin-left: 10px;
	    	}
	    }

	    &.asc {
	    	&:after {
	    		transform: rotate( 90deg );
	    	}
	    }

	    &.desc {
	    	&:after {
	    		transform: rotate( 270deg );
	    	}
	    }
		}

		.list {
			@include reset-list;
			padding: 10px 20px;

			@include mq( 540px ) {
				padding: 30px 40px;
			}

			&__address {
				font-style: normal;
				padding: 10px 10px 10px 25px;
				display: block;
				margin: 0;
			}

			&__tag {
				$dotSize: 6px;

				position: absolute;
				top: 16px;
				left: 5px;
				size: $dotSize;
				border-radius: $dotSize;
				font-size: 0;
			}

			li {
				display: block;
				position: relative;
				cursor: pointer;
				color: rgba( black, .5 );
				transition: color .1s ease-in-out;

				&:hover {
					color: rgba( black, .75 );
				}
			}
		}
	}

	&__counter {
		.address {
			&__counter {
				display: inline-block;
			}
		}

		&:not(.adding) {
			.address {
				&__prev,
				&__next {
					&.button {
						opacity: 1;
						visibility: visible;
					}
				}
			}
		}

		.modal {
			&__title {
				.suffix {
					display: inline;
				}
			}
		}

		&.not-empty:not(.editing) {
			.modal {
				&__aside {
					&__toggle {
						opacity: 1;
						visibility: visible;
					}
				}
			}
		}
	}

	&__form,
	&__cancel {
		@include vHide;
	}

	&__header {
		display: block;
		position: static;
		height: 140px;
		user-select: none;
		@include font-smoothing;
	}

	&__content {
		position: absolute;
		top: calc( 50% + #{$actionButHeight} );
		left: 50%;
		transform: translate( -50%, -50% );
		transition: left .15s ease-in-out;
		@include font-smoothing;
	}

	&__title {
		position: absolute;
		top: calc( 50% - #{$actionButHeight} );
		left: 50%;
		width: calc( 100% - 40px );
		transform: translate( -50%, -50% );
		transition: all .15s ease-in-out;

		.suffix {
			display: none;
		}

		@include mq( 540px ) {
			width: calc( 100% - 80px );
		}
	}

	&__action {
		@include vShow;
	}

	&__close {
		$closeSize: 32px;
		$closePos:	20px;
		position: fixed $closePos $closePos auto auto;
		size: $closeSize;
		line-height: $closeSize - 2px;
		box-shadow: none;
		padding: 0;
		font-size: 0;
		
		overflow: hidden;

		@include mq( 540px ) {
			position: fixed $closePos*2 $closePos*2 auto auto;
		}

		&:before {
			content: 'x';
			font-size: 12px;
			display: block;
		}
	}

	&__map {
		position: absolute;
		left: 100%;
		right: -200%;
		top: 270px;
		bottom: 0;
		overflow: hidden;
		opacity: 0;
		visibility: hidden;
		transition: right .15s ease-in-out, left .15s ease-in-out, opacity .15s ease-in-out, top .1s ease-in-out;

		#map {
			size: 100%;
		}
	}

	&.not-empty {
		.modal {
			&__title {
				transform: translate( -50%, 0 );
				top: 40px;

				h1 {
					margin-bottom: 40px;
				}
			}

			&__form,
			&__cancel {
				@include vShow;
				margin-bottom: 30px;
			}

			&__cancel {
				> button {
					color: rgba( black, .25 );
					transition: color .15s ease-in-out;

					&:hover {
						color: rgba( black, .75 );
					}
				}
			}

			&__action {
				@include vHide;
			}

			&__map {
				opacity: 1;
				visibility: visible;
			}
		}
	}
}